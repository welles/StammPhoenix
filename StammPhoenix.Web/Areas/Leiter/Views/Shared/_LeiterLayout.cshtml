@using Microsoft.AspNetCore.Html
@using StammPhoenix.Util.Interfaces
@using StammPhoenix.Persistence.Constants

@inject IAuth Auth

@{
    Layout = "_Layout";
}

@functions
{
    IHtmlContent NavLink(string? url, string? text)
    {
        var active = this.Context.Request.Path == new PathString(url) ? "active" : string.Empty;

        return this.Html.Raw($" <a class=\"nav-link {active}\" href=\"{url}\">{text}</a>");
    }
}

@section AreaNavigation
{
    <nav class="navbar navbar-expand-lg navbar-light bg-light container rounded shadow-sm mt-2">
        <a class="navbar-brand" href="@Url.To("Index", "Home", "Leiter")">
            <img src="@Url.Content("~/image/lilie-regenbogen-512.png")" height="32" alt="Leiterbereich">
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarLeiter">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarLeiter">
            <ul class="navbar-nav me-auto">
                <li class="nav-item">
                    @NavLink(Url.To("Index", "Home", "Leiter"), "Leitendenbereich")
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">Mein Konto</a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="@Url.To("ChangePassword", "Konto", "Leiter")"><span class="material-icons">lock</span> <span>Passwort ändern</span></a></li>
                        <li><a class="dropdown-item" href="@Url.To("ChangeUsername", "Konto", "Leiter")"><span class="material-icons">person</span> <span>Benutzernamen ändern</span></a></li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">Website</a>
                    <ul class="dropdown-menu">
                         @if (this.Auth.HasRole(nameof(Role.Administrator)))
                         {
                             <li><a class="dropdown-item" href="@Url.To("Index", "Benutzer", "Leiter")"><span class="material-icons">recent_actors</span> <span>Benutzeraccounts verwalten</span></a></li>
                             <li><a class="dropdown-item" href="@Url.To("Index", "Vorstand", "Leiter")"><span class="material-icons">supervisor_account</span> <span>Vorstandskontaktdaten verwalten</span></a></li>
                         }
                        <li><a class="dropdown-item" href="@Url.To("Index", "Teams", "Leiter")"><span class="material-icons">groups</span> <span>Stufeninformationen verwalten</span></a></li>
                    </ul>
                </li>
            </ul>
        </div>
    </nav>
}

@RenderBody()
