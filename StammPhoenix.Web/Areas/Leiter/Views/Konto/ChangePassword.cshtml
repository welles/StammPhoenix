@using StammPhoenix.Web.Models.Login
@using StammPhoenix.Web.Areas.Leiter.Models.Konto

@inject ITempCookieService TempCookieService

<div class="card container p-0 fit-content shadow-sm">
    <h5 class="card-header">Neues Passwort festlegen</h5>
    <div class="card-body">
        @using (Html.BeginForm("ChangePassword", "Konto", FormMethod.Post, new { @class = "d-flex flex-column d-grid gap-2"}))
        {
            <input type="hidden" value="@Context.Request.Query["redirect"]" name="@nameof(ChangePasswordModel.Redirect)" />
            <div class="input-group">
                <span class="input-group-text material-icons">lock</span>
                <input type="password" autocomplete="current-password" class="form-control" placeholder="Altes Passwort" name="@nameof(ChangePasswordModel.OldPassword)" >
            </div>
            <div class="input-group">
                <span class="input-group-text material-icons">lock</span>
                <input type="password" autocomplete="new-password" class="form-control" placeholder="Neues Passwort" name="@nameof(ChangePasswordModel.NewPassword)" >
            </div>
            <div class="input-group">
                <span class="input-group-text material-icons">lock</span>
                <input type="password" autocomplete="new-password" class="form-control" placeholder="Passwort wiederholen" name="@nameof(ChangePasswordModel.NewPasswordRepeat)" >
            </div>
            <button type="submit" class="btn btn-dark">Speichern</button>
            @if (this.TempCookieService.TryGetTempCookie("ChangePasswordErrorMessage", out var errorMessage))
            {
                <div class="alert alert-danger" role="alert">@Html.Raw(errorMessage)</div>
            }
        }
    </div>
</div>
